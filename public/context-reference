<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <title>Ilysa by Example: Context Reference</title>
    <link rel=stylesheet href="site.css">
  </head>
  <script>
      onkeydown = (e) => {
          
          if (e.key == "ArrowLeft") {
              window.location.href = 'chroma-event-reference';
          }
          
          
      }
  </script>
  <body>
    <div class="example" id="context-reference">
      <h2><a href="./">Ilysa by Example</a>: Context Reference</h2>
      
      <table>
        
        <tr>
          <td class="docs">
            <p>This example documents all the possible options for the methods that create
Chroma events. For Chroma specific details on what the options do, please refer
to <a href="https://github.com/Aeroluna/Chroma">https://github.com/Aeroluna/Chroma</a>.</p>

          </td>
          <td class="code leading">
            <a href="http://play.golang.org/p/Ll_Xc0Waa1X"><img title="Run code" src="play.png" class="run" /></a><img title="Copy code" src="clipboard.png" class="copy" />
          <pre tabindex="0" class="chroma">
<span class="kn">package</span> <span class="nx">main</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma"><span class="kn">import</span> <span class="p">(</span>
    <span class="s">&#34;github.com/shasderias/ilysa&#34;</span>
    <span class="s">&#34;github.com/shasderias/ilysa/beatsaber&#34;</span>
    <span class="s">&#34;github.com/shasderias/ilysa/colorful&#34;</span>
    <span class="s">&#34;github.com/shasderias/ilysa/context&#34;</span>
    <span class="s">&#34;github.com/shasderias/ilysa/ease&#34;</span>
    <span class="s">&#34;github.com/shasderias/ilysa/evt&#34;</span>
    <span class="s">&#34;github.com/shasderias/ilysa/light&#34;</span>
    <span class="s">&#34;github.com/shasderias/ilysa/timer&#34;</span>
<span class="p">)</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma"><span class="kd">var</span> <span class="p">(</span>
    <span class="nx">Red</span> <span class="p">=</span> <span class="nx">colorful</span><span class="p">.</span><span class="nf">MustParseHex</span><span class="p">(</span><span class="s">&#34;#FF0000&#34;</span><span class="p">)</span>
<span class="p">)</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma"><span class="kd">func</span> <span class="nf">main</span><span class="p">()</span> <span class="p">{</span>
    <span class="nx">m</span><span class="p">,</span> <span class="nx">_</span> <span class="o">:=</span> <span class="nx">beatsaber</span><span class="p">.</span><span class="nf">NewMockMap</span><span class="p">(</span><span class="nx">beatsaber</span><span class="p">.</span><span class="nx">EnvironmentOrigins</span><span class="p">,</span> <span class="mi">120</span><span class="p">,</span> <span class="s">&#34;[]&#34;</span><span class="p">)</span>
    <span class="nx">p</span> <span class="o">:=</span> <span class="nx">ilysa</span><span class="p">.</span><span class="nf">New</span><span class="p">(</span><span class="nx">m</span><span class="p">)</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">    <span class="nx">l</span> <span class="o">:=</span> <span class="nx">light</span><span class="p">.</span><span class="nf">NewBasic</span><span class="p">(</span><span class="nx">p</span><span class="p">,</span> <span class="nx">evt</span><span class="p">.</span><span class="nx">BackLasers</span><span class="p">)</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">    <span class="nx">p</span><span class="p">.</span><span class="nf">Sequence</span><span class="p">(</span><span class="nx">timer</span><span class="p">.</span><span class="nf">Seq</span><span class="p">([]</span><span class="kt">float64</span><span class="p">{</span><span class="mi">0</span><span class="p">,</span> <span class="mi">1</span><span class="p">,</span> <span class="mi">2</span><span class="p">,</span> <span class="mi">4</span><span class="p">},</span> <span class="mi">5</span><span class="p">),</span> <span class="kd">func</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">)</span> <span class="p">{</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>SeqT</code> is the current time in the current sequence, on a 0-1 scale. As a special case, SeqT is 1 if the
current sequence has only 1 step.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
        <span class="nx">ctx</span><span class="p">.</span><span class="nf">SeqT</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>SeqOrdinal</code> is the ordinal number of the current iteration of the current sequence, starting from 0.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
        <span class="nx">ctx</span><span class="p">.</span><span class="nf">SeqOrdinal</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>SeqLen</code> is the number of steps in the current sequence.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
        <span class="nx">ctx</span><span class="p">.</span><span class="nf">SeqLen</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>SeqNextB</code> is the beat number of the next step in the current sequence.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
        <span class="nx">ctx</span><span class="p">.</span><span class="nf">SeqNextB</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>SeqNextBOffset</code> is the difference in beats between the current step and the next step.
As a special case, <code>SeqNextBOffset</code> returns the difference between the last beat and the ghost beat, if this is the last step.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
        <span class="nx">ctx</span><span class="p">.</span><span class="nf">SeqNextBOffset</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>SeqPrevB</code> is the beat number of the previous step in the current sequence.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
        <span class="nx">ctx</span><span class="p">.</span><span class="nf">SeqPrevB</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>SeqPrevBOffset</code> is the difference in beats between the current step and the previous step.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
        <span class="nx">ctx</span><span class="p">.</span><span class="nf">SeqPrevBOffset</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>SeqFirst</code> is true if this is the first step in the current sequence.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
        <span class="nx">ctx</span><span class="p">.</span><span class="nf">SeqFirst</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>SeqLast</code> is true if this is the last step in the current sequence.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
        <span class="nx">ctx</span><span class="p">.</span><span class="nf">SeqLast</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">        <span class="nx">ctx</span><span class="p">.</span><span class="nf">Range</span><span class="p">(</span><span class="nx">timer</span><span class="p">.</span><span class="nf">Rng</span><span class="p">(</span><span class="mi">0</span><span class="p">,</span> <span class="mf">0.5</span><span class="p">,</span> <span class="mi">6</span><span class="p">,</span> <span class="nx">ease</span><span class="p">.</span><span class="nx">Linear</span><span class="p">),</span> <span class="kd">func</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">Context</span><span class="p">)</span> <span class="p">{</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>B</code> is the current beat.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
            <span class="nx">ctx</span><span class="p">.</span><span class="nf">B</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>T</code> is the current time in the current range (or sequence), on a 0-1 scale. As a special case, <code>T</code> is 1 if the
current range only has 1 step.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
            <span class="nx">ctx</span><span class="p">.</span><span class="nf">T</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>Ordinal</code> is the ordinal number of the current step in the current range (or sequence), starting from 0.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
            <span class="nx">ctx</span><span class="p">.</span><span class="nf">Ordinal</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>StartB</code> is the starting beat of the current range.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
            <span class="nx">ctx</span><span class="p">.</span><span class="nf">StartB</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>EndB</code> is the ending beat of the current range.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
            <span class="nx">ctx</span><span class="p">.</span><span class="nf">EndB</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>Duration</code> is the duration of the current range.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
            <span class="nx">ctx</span><span class="p">.</span><span class="nf">Duration</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>First</code> is true if this is the first step in the current range.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
            <span class="nx">ctx</span><span class="p">.</span><span class="nf">First</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>Last</code> is true if this is the last step in the current range.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
            <span class="nx">ctx</span><span class="p">.</span><span class="nf">Last</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">            <span class="nx">ctx</span><span class="p">.</span><span class="nf">Light</span><span class="p">(</span><span class="nx">l</span><span class="p">,</span> <span class="kd">func</span><span class="p">(</span><span class="nx">ctx</span> <span class="nx">context</span><span class="p">.</span><span class="nx">LightContext</span><span class="p">)</span> <span class="p">{</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>LightIDT</code> is the position of the current light ID for the current light, on a 0-1 scale.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
                <span class="nx">ctx</span><span class="p">.</span><span class="nf">LightIDT</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>LightIDOrdinal</code> is the ordinal number of current light ID.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
                <span class="nx">ctx</span><span class="p">.</span><span class="nf">LightIDOrdinal</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>LightIDLen</code> is the number of light IDs the current light has.</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
                <span class="nx">ctx</span><span class="p">.</span><span class="nf">LightIDLen</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            <p><code>LightIDCur</code> is the current light ID (effectively, <code>LightIDOrdinal</code> + 1).</p>

          </td>
          <td class="code leading">
            
          <pre tabindex="0" class="chroma">
                <span class="nx">ctx</span><span class="p">.</span><span class="nf">LightIDCur</span><span class="p">()</span></pre>
          </td>
        </tr>
        
        <tr>
          <td class="docs">
            
          </td>
          <td class="code">
            
          <pre tabindex="0" class="chroma">            <span class="p">})</span>
        <span class="p">})</span>
    <span class="p">})</span>
    <span class="nx">p</span><span class="p">.</span><span class="nf">Dump</span><span class="p">()</span>
<span class="p">}</span></pre>
          </td>
        </tr>
        
      </table>
      
      
      <p class="footer">
        by <a href="https://github.com/shasderias">shasderias</a> | <a href="https://github.com/shasderias/ilysabyexample/blob/master/examples/context-reference">source</a> | <a href="https://github.com/mmcgrana/gobyexample#license">license</a>
      </p>
    </div>
    <script>
      var codeLines = [];
      codeLines.push('package main\u000A');codeLines.push('import (\u000A    \"github.com/shasderias/ilysa\"\u000A    \"github.com/shasderias/ilysa/beatsaber\"\u000A    \"github.com/shasderias/ilysa/colorful\"\u000A    \"github.com/shasderias/ilysa/context\"\u000A    \"github.com/shasderias/ilysa/ease\"\u000A    \"github.com/shasderias/ilysa/evt\"\u000A    \"github.com/shasderias/ilysa/light\"\u000A    \"github.com/shasderias/ilysa/timer\"\u000A)\u000A');codeLines.push('var (\u000A    Red \u003D colorful.MustParseHex(\"#FF0000\")\u000A)\u000A');codeLines.push('func main() {\u000A    m, _ :\u003D beatsaber.NewMockMap(beatsaber.EnvironmentOrigins, 120, \"[]\")\u000A    p :\u003D ilysa.New(m)\u000A');codeLines.push('    l :\u003D light.NewBasic(p, evt.BackLasers)\u000A');codeLines.push('    p.Sequence(timer.Seq([]float64{0, 1, 2, 4}, 5), func(ctx context.Context) {\u000A');codeLines.push('        ctx.SeqT()\u000A');codeLines.push('        ctx.SeqOrdinal()\u000A');codeLines.push('        ctx.SeqLen()\u000A');codeLines.push('        ctx.SeqNextB()\u000A');codeLines.push('        ctx.SeqNextBOffset()\u000A');codeLines.push('        ctx.SeqPrevB()\u000A');codeLines.push('        ctx.SeqPrevBOffset()\u000A');codeLines.push('        ctx.SeqFirst()\u000A');codeLines.push('        ctx.SeqLast()\u000A');codeLines.push('        ctx.Range(timer.Rng(0, 0.5, 6, ease.Linear), func(ctx context.Context) {\u000A');codeLines.push('            ctx.B()\u000A');codeLines.push('            ctx.T()\u000A');codeLines.push('            ctx.Ordinal()\u000A');codeLines.push('            ctx.StartB()\u000A');codeLines.push('            ctx.EndB()\u000A');codeLines.push('            ctx.Duration()\u000A');codeLines.push('            ctx.First()\u000A');codeLines.push('            ctx.Last()\u000A');codeLines.push('            ctx.Light(l, func(ctx context.LightContext) {\u000A');codeLines.push('                ctx.LightIDT()\u000A');codeLines.push('                ctx.LightIDOrdinal()\u000A');codeLines.push('                ctx.LightIDLen()\u000A');codeLines.push('                ctx.LightIDCur()\u000A');codeLines.push('            })\u000A        })\u000A    })\u000A    p.Dump()\u000A}\u000A');
    </script>
    <script src="site.js" async></script>
  </body>
</html>
